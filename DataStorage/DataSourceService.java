package DataStorage;

import Model.Users.*;
import Model.MobilePhone.*;
import Model.ShoppingCart.*;
import java.util.ArrayList;
import java.util.HashMap;

public interface DataSourceService {
    boolean containsAdmin(String userName);
    boolean passwordOfAdminMatches(String userName, String password);
    void addSeller(Seller seller);
    boolean containsSeller(String userName);
    boolean passwordOfSellerMatches(String userName, String password);
    void updateSellerDetailsInDataSource(Seller seller);
    Seller getSeller(String userName);
    HashMap<String, Seller> getSellers();
    void removeSeller(String userName);
    void addCustomer(Customer customer);
    boolean containsCustomer(String userName);
    boolean passwordOfCustomerMatches(String userName, String password);
    void updateCustomerDetailsInDataSource(Customer customer);
    Customer getCustomer(String userName);
    HashMap<String, Customer> getCustomers();
    void removeCustomer(String userName);
    int getLastPhoneId();
    void addPhoneToShop(int phoneId,int quantity);
    ArrayList<Integer> searchFromShop(String productId);
    boolean containsPhone(int phoneId);
    HashMap<Integer,Integer>getPhones();
    void updatePhoneQuantity(int phoneId, int quantity);
    void removePhone(int phoneId);
    void addPhoneSpecifications(int phoneId, PhoneSpecifications phoneDetailsModel);
    ArrayList<Integer>searchFromPhoneDetails(String input);
    PhoneSpecifications getParticularPhone(int phoneId);
    HashMap<Integer, PhoneSpecifications> getPhoneDetails();
    void addPhoneCamera(int phoneId, PhoneCamera phoneCameraModel);
    ArrayList<Integer>searchFromPhoneCameraDetails(String input);
    PhoneCamera getParticularPhoneWithCamera(int phoneId);
    HashMap<Integer, PhoneCamera>getPhoneCameraDetails();
    void addPhoneDimensions(int phoneId, PhoneDimensions phoneDimensionsModel);
    ArrayList<Integer>searchFromPhoneDimensionsDetails(String input);
    PhoneDimensions getParticularPhoneWithDimensions(int phoneId);
    HashMap<Integer, PhoneDimensions>getPhoneDimensions();
    void addPhoneManufacturer(int phoneId, PhoneManufacturer phoneManufacturerModel);
    ArrayList<Integer>searchFromPhoneManufacturer(String input);
    PhoneManufacturer getParticularPhoneWithManufacturer(int phoneId);
    HashMap<Integer,PhoneManufacturer>getPhoneManufacturer();
    void addPhoneProcessor(int phoneId, PhoneProcessor phoneProcessor);
    ArrayList<Integer>searchFromPhoneProcessor(String input);
    PhoneProcessor getParticularPhoneWithProcessor(int phoneId);
    HashMap<Integer, PhoneProcessor> getPhoneProcessorDetails();
    ArrayList<Integer> searchPhoneFromFile(String input);
    void addToStockNillList(int productId);
    ArrayList<Integer> readStockNilProducts();
    void removeFromStockNilList(int productId);
    void writeToCartFile(String userName, HashMap<Integer, Integer> productsFromCart);
    boolean containsCart(String userName);
    ShoppingCart getCart(String userName);
    int getLastOrderNum();
    void writeToOrdersList(String userName, int orderId, int productId, int quantity, String deliveryStatus);
    String getUserFromOrderedUsers(int orderId);
    ArrayList<Integer> readParticularOrder(String userName);
    ShoppingCart getProductsOfThatOrder(int orderId);
    ArrayList<Integer> readAllOrders();
    HashMap<Integer, String> readOrderStatus(String userName);
    void updateOrderStatus(String userFromOrderedUsers, int orderId);
    void removeOrder(int orderId,String userName);
    void writeToBillFile(int orderId, int totalAmount);
    int readFromBillFile(int orderId);
    void freeCartForUser(String userName);
    void updateCartOwner(String userName);
}
